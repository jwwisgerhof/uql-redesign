/*!!
  * driveway - pure CSS masonry layout aid
  *
  * @license MIT
  * @author jh3y
*/

@import 'bem'

// import configuration
c = json('../../driveway-config.json', {
  hash: true,
  leave-strings: true
})

// create shortcuts
$blocks     = c.blocks
$mods       = c.mods
$responses  = c.responses
$aesthetics = c.aesthetics

define('$clusterCollapse', unquote($responses.breakpoints[$responses.collapse]))

// generate aesthetic variables based on config
for $aesthetic, $value in $aesthetics
  if $aesthetic != 'flipSizes'
    define('$value', unquote($value))
  define('$' + $aesthetic, $value)

// generate feature flags
for $feature, $enabled in c.features
  define('$' + $feature, $enabled)

// layout container block
.{$blocks.layout.lbl}
  box-sizing border-box
  column-gap 0
  position   relative

  *
    box-sizing border-box

  if $focus
    +el($blocks.layout.els.focus-curtain)
      background-color black
      bottom           0
      display          none
      left             0
      opacity          .75
      position         fixed
      right            0
      top              0
      z-index          2

  // generate column-count for different breakpoints as dictated by config
  for $breakpoint, $value in $responses.breakpoints
    define('$columnCount', $responses.cols[$breakpoint])
    define('$breakpointVal', unquote($value))
    if $columnCount != 1
      @media(min-width: $breakpointVal)

        // NOTE: space required to please linter.
        column-count $columnCount

// panel block
.{$blocks.panel.lbl}
  margin 0
  padding $panelGap

  if $focus
    +mod($mods.focus)
      position relative

      &:hover
        z-index  3

      // use CSS3 sibling combinator syntax to show focus curtain when a focus
      // panel is hovered over
      &:hover ~ .{$blocks.layout.lbl}__{$blocks.layout.els.focus-curtain}
        display block

  if $pulse
    +mod($mods.pulse)
      transform-style preserve-3d
      perspective     1000
      transition      transform .25s ease 0s
      &:hover
        transform scale(1.02)

  +el($blocks.panel.els.content)
    border-radius $borderRadius
    overflow      hidden
    padding       $panelPadding
    width         100%

// NOTE: Iterates through responsive breakpoints in order to set break-inside
// property on the smallest possible breakpoint where columns > 1
$set = true
for $breakpoint, $value in $responses.breakpoints
  define('$columnCount', $responses.cols[$breakpoint])
  define('$breakpointVal', unquote($value))

  if $columnCount != 1
    if $set
      $set = false
      .{$blocks.panel.lbl}
        @media (min-width: $breakpointVal)
          break-inside avoid

if $flip
  .{$blocks.flip.lbl}
    perspective 1000

    &:hover
      .{$blocks.flip.lbl}__{$blocks.flip.els.content}
        transform rotateY(180deg)

    // NOTE: generates flip panel sizes.
    // important as flip panel must have a defined height in order to render
    // properly.
    for $size, $value in $flipSizes
      define('$heightVal', unquote($value))

      +mod($size)
        height $heightVal

    +el($blocks.flip.els.panel)
      backface-visibility hidden
      border-radius       $borderRadius
      height              100%
      left                0
      overflow            visible
      padding             $panelPadding
      position            absolute
      top                 0
      width               100%

      +mod($mods.front)
        transform rotateY(0deg)
        z-index   2

      +mod($mods.back)
        transform rotateY(180deg)

    +el($blocks.flip.els.content)
      height          100%
      overflow        visible
      position        relative
      transform-style preserve-3d
      transition      .25s

.{$blocks.cluster.lbl}
  display flex
  padding 0

  +mod($mods.vertical)
    @media(max-width: $clusterCollapse)
      flex-direction column

  +mod($mods.horizontal)
    flex-direction column

  +el($blocks.cluster.els.segment)
    display flex
    flex    1 1 auto

    +mod($mods.row)
      display        flex

      @media(max-width: $clusterCollapse)
        flex-direction column

    +mod($mods.column)
      flex-direction column

    @media(min-width: $clusterCollapse)
      +mod($mods.half)
        flex-basis 50%

      +mod($mods.quarter)
        flex-basis 25%
